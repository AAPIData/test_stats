"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_edu_combo$estimate_type <- fct_recode(state_edu_combo$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
### Insurance
state_ins_alone <- state_insurance_long  %>% filter(pop_id %in% aapi_alone )
state_ins_alone$pop_id <- fct_recode(state_ins_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_ins_alone$estimate_type <- fct_recode(state_ins_alone$estimate_type,
"No Health Ins." = "pct_no_ins")
### Insurance
state_ins_combo <- state_insurance_long  %>% filter(pop_id %in% aapi_combo )
state_ins_combo$pop_id <- fct_recode(state_ins_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_ins_combo$estimate_type <- fct_recode(state_ins_combo$estimate_type,
"No Health Ins." = "pct_no_ins")
# POVERTY
state_poverty_alone <- state_poverty_long  %>% filter(pop_id %in% aapi_alone )
state_poverty_alone$pop_id <- fct_recode(state_poverty_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_poverty_alone$estimate_type <- fct_recode(state_poverty_alone$estimate_type,
"Below Poverty" = "pct_below_poverty")
### POVERTY
state_poverty_combo <- state_poverty_long  %>% filter(pop_id %in% aapi_combo )
state_poverty_combo$pop_id <- fct_recode(state_poverty_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_poverty_combo$estimate_type <- fct_recode(state_poverty_combo$estimate_type,
"Below Poverty" = "pct_below_poverty")
# state_edu_combo_origin <- state_edu_long  %>% filter(pop_id %in% Asian_origin_combo )
# state_edu_combo_origin$pop_id <- fct_recode(state_edu_combo_origin$pop_id,
#                 "Asian Indian" = "32",
#                "Cambodian" = "34",
#                "Chinese" = "35",
#                "Chinese (except, Taiwanese)" = "36",
#                "Filipino" = "38",
#                "Japanese" = "41",
#                "Korean" = "42",
#                "Laotian" = "43",
#                "Pakistani" = "45",
#                "Thai" = "47",
#                "Vietnamese" = "48")
# ## Recoding state_edu_alone$estimate_type
# state_edu_combo_origin$estimate_type <- fct_recode(state_edu_combo_origin$estimate_type,
#                "HS or Higher" = "pct_hs_higher",
#                "BA or Higher" = "pct_ba_higher",
#                "Total" ="total")
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"), type="tilemap") %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
state_edu_table
usgeojson
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"), type="tilemap")
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_title(text = "Health Insurance Coverage", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_ins_table, name = "Insurance",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart(type="tilemap") %>%
hc_title(text = "t Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart(type="heatmap") %>%
hc_title(text = "t Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_title(text = "t Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff","heatmap") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_chart(type = "heatmap")
highchart() %>%
hc_chart(type = "tilemap") %>%
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"))
library(forcats)
library(DT)
library(readxl)
library(tidyverse)
library(highcharter)
library(glue)
library(acs)
knitr::knit_hooks$set(inline = function(x) { if(!is.numeric(x)){ x }else{ prettyNum(round(x,2), big.mark=",", digits=6) } })
hcoptslang <- getOption("highcharter.lang")
hcoptslang$thousandsSep <- ","
options(highcharter.lang = hcoptslang)
#national_cvap<- readxl::read_xlsx("state_dta.xlsx", sheet = "CVAP")
state_edu<- readxl::read_xlsx("state_dta.xlsx", sheet = "education")
state_insurance<- readxl::read_xlsx("state_dta.xlsx", sheet = "insurance")
state_poverty<- readxl::read_xlsx("state_dta.xlsx", sheet = "poverty")
state_edu$pop_id<- as.factor(state_edu$pop_id)
state_insurance$pop_id<- as.factor(state_insurance$pop_id)
state_poverty$pop_id<- as.factor(state_poverty$pop_id)
state_edu <- state_edu %>% mutate(
pct_hs_higher = tot_hs_higher/total,
pct_ba_higher = tot_bahigher/total)
state_edu_long<- state_edu %>% select(-pop_group , -tot_hs_higher,-tot_bahigher )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_insurance <- state_insurance %>% mutate(
pct_no_ins = no_insurance/total)
state_insurance_long<- state_insurance %>% select(-pop_group , -no_insurance,-with_insurance )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_poverty <- state_poverty %>% mutate(
pct_below_poverty = below_pov/total)
state_poverty_long<- state_poverty %>% select(-pop_group , -below_pov)  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
#state_edu<- state_edu %>% rename( `HS or Higher` = tot_hs_higher,
#                                       `BA or Higher` = tot_bahigher)
## Pulling National BA or Higher Percentage
avg_hs_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_hs_higher) %>%  summarize(mean = mean(pct_hs_higher)) %>% pull() %>% round(.,4)
avg_hs_higher <- avg_hs_higher*100
## Pulling National BA or Higher Percentage
avg_ba_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_ba_higher) %>%  summarize(mean = mean(pct_ba_higher)) %>% pull() %>% round(.,4)
avg_ba_higher <- avg_ba_higher*100
## Pulling National Percent No Insurance
avg_pct_noins <- state_insurance %>% filter(pop_id == 1) %>% select(Geography, pct_no_ins) %>%  summarize(mean = mean(pct_no_ins)) %>% pull() %>% round(.,4)
avg_pct_noins <- avg_pct_noins*100
## Pulling Poverty
avg_pct_belowpov <- state_poverty %>% filter(pop_id == 1) %>% select(Geography, pct_below_poverty) %>%  summarize(mean = mean(pct_below_poverty)) %>% pull() %>% round(.,4)
avg_pct_belowpov <- avg_pct_belowpov*100
racial_groups<- c(1,2,4,6,12,32,50,60)
aapi_alone<- c(1,12,50)
aapi_combo<- c(1,31,60)
Asian_orign_alone <- c(13:29)
Asian_origin_combo<- c(32:48)
NHPI_origin_alone <- c(51,55,56)
NHPI_origin_combo<- c(61:66)
state_edu_alone <- state_edu_long  %>% filter(pop_id %in% aapi_alone )
state_edu_alone$pop_id <- fct_recode(state_edu_alone$pop_id,
"State Population" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_edu_alone$estimate_type <- fct_recode(state_edu_alone$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
state_edu_combo <- state_edu_long  %>% filter(pop_id %in% aapi_combo )
state_edu_combo$pop_id <- fct_recode(state_edu_combo$pop_id,
"State Population" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_edu_combo$estimate_type <- fct_recode(state_edu_combo$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
### Insurance
state_ins_alone <- state_insurance_long  %>% filter(pop_id %in% aapi_alone )
state_ins_alone$pop_id <- fct_recode(state_ins_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_ins_alone$estimate_type <- fct_recode(state_ins_alone$estimate_type,
"No Health Ins." = "pct_no_ins")
### Insurance
state_ins_combo <- state_insurance_long  %>% filter(pop_id %in% aapi_combo )
state_ins_combo$pop_id <- fct_recode(state_ins_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_ins_combo$estimate_type <- fct_recode(state_ins_combo$estimate_type,
"No Health Ins." = "pct_no_ins")
# POVERTY
state_poverty_alone <- state_poverty_long  %>% filter(pop_id %in% aapi_alone )
state_poverty_alone$pop_id <- fct_recode(state_poverty_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_poverty_alone$estimate_type <- fct_recode(state_poverty_alone$estimate_type,
"Below Poverty" = "pct_below_poverty")
### POVERTY
state_poverty_combo <- state_poverty_long  %>% filter(pop_id %in% aapi_combo )
state_poverty_combo$pop_id <- fct_recode(state_poverty_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_poverty_combo$estimate_type <- fct_recode(state_poverty_combo$estimate_type,
"Below Poverty" = "pct_below_poverty")
# state_edu_combo_origin <- state_edu_long  %>% filter(pop_id %in% Asian_origin_combo )
# state_edu_combo_origin$pop_id <- fct_recode(state_edu_combo_origin$pop_id,
#                 "Asian Indian" = "32",
#                "Cambodian" = "34",
#                "Chinese" = "35",
#                "Chinese (except, Taiwanese)" = "36",
#                "Filipino" = "38",
#                "Japanese" = "41",
#                "Korean" = "42",
#                "Laotian" = "43",
#                "Pakistani" = "45",
#                "Thai" = "47",
#                "Vietnamese" = "48")
# ## Recoding state_edu_alone$estimate_type
# state_edu_combo_origin$estimate_type <- fct_recode(state_edu_combo_origin$estimate_type,
#                "HS or Higher" = "pct_hs_higher",
#                "BA or Higher" = "pct_ba_higher",
#                "Total" ="total")
state_ins_table <-state_ins_alone %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
#Reordering columns
state_ins_table <- state_ins_table [c(1,4,2,3)]
ix <- 2:4
state_ins_table[ix] <- lapply(state_ins_table[ix], as.numeric)
state_ins_table %>%
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
state_ins_table_combo <-state_ins_combo %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
#Reordering columns
state_ins_table_combo <- state_ins_table_combo [c(1,4,2,3)]
ix <- 2:4
state_ins_table_combo[ix] <- lapply(state_ins_table_combo[ix], as.numeric)
state_ins_table_combo %>%
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
state_ins_table <- state_ins_table %>% mutate(value = `State: No Health Ins.`*100, na.omit=T)
state_ins_table <- state_ins_table %>% mutate(value2 = `Asian: No Health Ins.`*100, na.omit=T)
state_ins_table <- state_ins_table %>% mutate(value3 = `NHPI: No Health Ins.`*100, na.omit=T)
state_ins_table<- state_ins_table %>% inner_join(fips.state, by = "State")
highchart() %>%
hc_title(text = "Health Insurance Coverage", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_ins_table, name = "Insurance",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
mapdata <- get_data_from_map(download_map_data("countries/us/us-all"))
state_edu_table <- state_edu_table %>% mutate(value = `State Population: BA or Higher`*100, na.omit=T)
state_edu_table <- state_edu_table %>% mutate(value2 = `Asian: BA or Higher`*100, na.omit=T)
mapdata <- get_data_from_map(download_map_data("countries/us/us-all"))
state_edu_table <- state_edu_table %>% mutate(value = `State Population: BA or Higher`*100, na.omit=T)
state_edu_table <-state_edu_alone %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
state_edu_table <- state_edu_table [c(1,6,7,2,3,4,5)]
ix <- 2:7
state_edu_table[ix] <- lapply(state_edu_table[ix], as.numeric)
state_edu_table %>%
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 1),
columnDefs = list(list(className = 'dt-head-left', targets = 5)),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
state_edu_table_combo <-state_edu_combo %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
#Reordering columns
state_edu_table_combo <- state_edu_table_combo [c(1,6,7,2,3,4,5)]
ix <- 2:7
state_edu_table_combo[ix] <- lapply(state_edu_table_combo[ix], as.numeric)
state_edu_table_combo %>%
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
mapdata <- get_data_from_map(download_map_data("countries/us/us-all"))
state_edu_table <- state_edu_table %>% mutate(value = `State Population: BA or Higher`*100, na.omit=T)
state_edu_table <- state_edu_table %>% mutate(value2 = `Asian: BA or Higher`*100, na.omit=T)
state_edu_table <- state_edu_table %>% mutate(value3 = `NHPI: BA or Higher`*100, na.omit=T)
data(fips.state)
fips.state <- fips.state %>% rename(State = STATE_NAME)
state_edu_table<- state_edu_table %>% inner_join(fips.state, by = "State")
data("usgeojson")
x <- c("{point.name}:", "Asian Alone:","NHPI Alone:")
title<-"Percent BA or Higher"
y <- c(" {point.value:.1f}%", " {point.value2:.1f}%",
" {point.value3:.1f}%")
style <- "style=font-size:80%"
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"))
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"))
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series(state_edu_table, name = "Education",value = "value")
View(state_edu_table)
View(state_edu_table_combo)
View(state_edu_table)
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series(state_edu_table, name = "Education",value = "value", dataLabels = list(enabled = TRUE, format = '{point.STUSAB}')) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series(state_edu_table, name = "Education",value = "value", dataLabels = list(enabled = TRUE, format = '{point.STUSAB}'))
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center")
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series(state_edu_table, dataLabels = list(enabled = TRUE, format = '{point.STUSAB}')) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series(state_edu_table, dataLabels = list(enabled = TRUE, format = '{point.STUSAB}'))
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_chart(type = "tilemap") %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
# hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB")) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
#testing<- "Percent BA or Higher \n <table style='font-family:'Avenir Next'; font-size:2vmin'>\n  <tr>\n  <th>{point.name}:</th>\n    <td> {point.value:.1f}%</td>\n  </tr>\n  <tr>\n    <th>Asian Alone:</th>\n    <td> #{point.value2:.1f}%</td>\n  </tr>\n  <tr>\n    <th>NHPI Alone:</th>\n    <td> {point.value3:.1f}%</td>\n  </tr>\n</table>"
highchart() %>%
hc_title(text = "Bachelors Degree or Higher", align = "center") %>%
hc_subtitle(text = "Source: 2011-2015 ACS using Asian/NHPI Alone", align = "center") %>%
hc_chart(backgroundColor = "#ffffff") %>%
hc_add_series_map(usgeojson, state_edu_table, name = "Education",value = "value", joinBy = c("postalcode", "STUSAB"),
borderColor= "null",
borderWidth= 0) %>%
hc_tooltip(pointFormat = tooltip_table(x,y,title), useHTML=T,  headerFormat= "")%>%
hc_add_theme(hc_theme_538()) %>%
hc_colorAxis(stops = color_stops(),labels= list(format = "{value}%"),showInLegend=T) %>%
hc_legend(title = list(text= "Statewide Percentage", fontStyle ='italic'),align = "center",verticalAlign = "bottom",
layout = "horizontal", padding = 5)
