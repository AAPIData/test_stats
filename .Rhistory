hcoptslang$thousandsSep <- ","
options(highcharter.lang = hcoptslang)
#national_cvap<- readxl::read_xlsx("state_dta.xlsx", sheet = "CVAP")
state_edu<- readxl::read_xlsx("state_dta.xlsx", sheet = "education")
state_insurance<- readxl::read_xlsx("state_dta.xlsx", sheet = "insurance")
state_poverty<- readxl::read_xlsx("state_dta.xlsx", sheet = "poverty")
state_edu$pop_id<- as.factor(state_edu$pop_id)
state_insurance$pop_id<- as.factor(state_insurance$pop_id)
state_poverty$pop_id<- as.factor(state_poverty$pop_id)
state_edu <- state_edu %>% mutate(
pct_hs_higher = tot_hs_higher/total,
pct_ba_higher = tot_bahigher/total)
state_edu_long<- state_edu %>% select(-pop_group , -tot_hs_higher,-tot_bahigher )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_insurance <- state_insurance %>% mutate(
pct_no_ins = no_insurance/total)
state_insurance_long<- state_insurance %>% select(-pop_group , -no_insurance,-with_insurance )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_poverty <- state_poverty %>% mutate(
pct_below_poverty = below_pov/total)
state_poverty_long<- state_poverty %>% select(-pop_group , -below_pov)  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
#state_edu<- state_edu %>% rename( `HS or Higher` = tot_hs_higher,
#                                       `BA or Higher` = tot_bahigher)
## Pulling National BA or Higher Percentage
avg_hs_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_hs_higher) %>%  summarize(mean = mean(pct_hs_higher)) %>% pull() %>% round(.,4)
avg_hs_higher <- avg_hs_higher*100
## Pulling National BA or Higher Percentage
avg_ba_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_ba_higher) %>%  summarize(mean = mean(pct_ba_higher)) %>% pull() %>% round(.,4)
avg_ba_higher <- avg_ba_higher*100
## Pulling National Percent No Insurance
avg_pct_noins <- state_insurance %>% filter(pop_id == 1) %>% select(Geography, pct_no_ins) %>%  summarize(mean = mean(pct_no_ins)) %>% pull() %>% round(.,4)
avg_pct_noins <- avg_pct_noins*100
## Pulling Poverty
avg_pct_belowpov <- state_poverty %>% filter(pop_id == 1) %>% select(Geography, pct_below_poverty) %>%  summarize(mean = mean(pct_below_poverty)) %>% pull() %>% round(.,4)
avg_pct_belowpov <- avg_pct_belowpov*100
racial_groups<- c(1,2,4,6,12,32,50,60)
aapi_alone<- c(1,12,50)
aapi_combo<- c(1,31,60)
Asian_orign_alone <- c(13:29)
Asian_origin_combo<- c(32,34,35,36,38,41,42,43,45,47,48)
NHPI_origin_alone <- c(51,55,56)
NHPI_origin_combo<- c(61:66)
state_edu_alone <- state_edu_long  %>% filter(pop_id %in% aapi_alone )
state_edu_alone$pop_id <- fct_recode(state_edu_alone$pop_id,
"State Population" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_edu_alone$estimate_type <- fct_recode(state_edu_alone$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
state_edu_combo <- state_edu_long  %>% filter(pop_id %in% aapi_combo )
state_edu_combo$pop_id <- fct_recode(state_edu_combo$pop_id,
"State Population" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_edu_combo$estimate_type <- fct_recode(state_edu_combo$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
### Insurance
state_ins_alone <- state_insurance_long  %>% filter(pop_id %in% aapi_alone )
state_ins_alone$pop_id <- fct_recode(state_ins_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_ins_alone$estimate_type <- fct_recode(state_ins_alone$estimate_type,
"No Health Ins." = "pct_no_ins")
### Insurance
state_ins_combo <- state_insurance_long  %>% filter(pop_id %in% aapi_combo )
state_ins_combo$pop_id <- fct_recode(state_ins_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_ins_combo$estimate_type <- fct_recode(state_ins_combo$estimate_type,
"No Health Ins." = "pct_no_ins")
# POVERTY
state_poverty_alone <- state_poverty_long  %>% filter(pop_id %in% aapi_alone )
state_poverty_alone$pop_id <- fct_recode(state_poverty_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_poverty_alone$estimate_type <- fct_recode(state_poverty_alone$estimate_type,
"Below Poverty" = "pct_below_poverty")
### POVERTY
state_poverty_combo <- state_poverty_long  %>% filter(pop_id %in% aapi_combo )
state_poverty_combo$pop_id <- fct_recode(state_poverty_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_poverty_combo$estimate_type <- fct_recode(state_poverty_combo$estimate_type,
"Below Poverty" = "pct_below_poverty")
state_edu_combo_origin <- state_edu_long  %>% filter(pop_id %in% Asian_origin_combo )
state_edu_combo_origin$pop_id <- fct_recode(state_edu_combo_origin$pop_id,
"Asian Indian" = "32",
"Cambodian" = "34",
"Chinese" = "35",
"Chinese (except, Taiwanese)" = "36",
"Filipino" = "38",
"Japanese" = "41",
"Korean" = "42",
"Laotian" = "43",
"Pakistani" = "45",
"Thai" = "47",
"Vietnamese" = "48")
## Recoding state_edu_alone$estimate_type
state_edu_combo_origin$estimate_type <- fct_recode(state_edu_combo_origin$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
---
title: ""
author: ""
output:
html_document:
toc: true
toc_float: true
css: style.css
---
```{r setup, include=FALSE}
>>>>>>> Stashed changes
library(forcats)
library(DT)
library(readxl)
library(tidyverse)
library(highcharter)
library(glue)
knitr::knit_hooks$set(inline = function(x) { if(!is.numeric(x)){ x }else{ prettyNum(round(x,2), big.mark=",", digits=6) } })
hcoptslang <- getOption("highcharter.lang")
hcoptslang$thousandsSep <- ","
options(highcharter.lang = hcoptslang)
<<<<<<< Updated upstream
national_cvap<- readxl::read_xlsx("national_dta.xlsx", sheet = "CVAP")
national_edu<- readxl::read_xlsx("national_dta.xlsx", sheet = "Education")
national_edu<- national_edu %>% rename(`HS/GED` = total_hsged,
`HS or Higher` = total_hs_higher,
`Bachelor's` = total_ba,
`BA or Higher` = total_ba_higher)
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px'))) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px')),
minorTicks=F) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px')),
majorTicks=F) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px')),
minorTickLength= 0,
tickLength= 0) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px')),
minorTickLength= 0,
tickLength= 0) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px'))) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = "Group"),
labels= list(style =list(color ="#E26069", fontSize='15px')),
minorTickLength= 0,tickLength=0) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
national_edu %>%
filter(group_ID ==  "Major Racial Groups") %>%
arrange(desc(total_pop)) %>%
rename(Total = total_pop)%>%
select(-group_ID) %>%
mutate(BA_Higher = round((`BA or Higher`/Total)*100,2))%>%
hchart( "bar", hcaes(x = Group, y = BA_Higher)) %>%
hc_add_theme(hc_theme_tufte()) %>% # hc_colors("#008fd5") %>%
hc_yAxis(title = list(text = "Bachelor's Degree or Higher"),
labels= list(style =list(color ="black", fontSize='12px'),
format= "{value}%"), max = 100, opposite=TRUE) %>%
hc_xAxis(title = list(text = ""),
labels= list(style =list(color ="#E26069", fontSize='15px')),
minorTickLength= 0,tickLength=0) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
hc_title(text = "Educational Attainment",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069"))
#render your sweet site.
rmarkdown::render_site()
national_cvap %>%
filter(group_ID ==  "Asian Detail Combo") %>%
arrange(desc(CVAP)) %>%
rename(Total = total_pop)%>%
select(Group, CVAP,Total)%>%
datatable(colnames = c('Group-Alone/Combo' = 'Group'),extensions =
=======
#national_cvap<- readxl::read_xlsx("state_dta.xlsx", sheet = "CVAP")
state_edu<- readxl::read_xlsx("state_dta.xlsx", sheet = "education")
state_insurance<- readxl::read_xlsx("state_dta.xlsx", sheet = "insurance")
state_poverty<- readxl::read_xlsx("state_dta.xlsx", sheet = "poverty")
state_edu$pop_id<- as.factor(state_edu$pop_id)
state_insurance$pop_id<- as.factor(state_insurance$pop_id)
state_poverty$pop_id<- as.factor(state_poverty$pop_id)
state_edu <- state_edu %>% mutate(
pct_hs_higher = tot_hs_higher/total,
pct_ba_higher = tot_bahigher/total)
state_edu_long<- state_edu %>% select(-pop_group , -tot_hs_higher,-tot_bahigher )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_insurance <- state_insurance %>% mutate(
pct_no_ins = no_insurance/total)
state_insurance_long<- state_insurance %>% select(-pop_group , -no_insurance,-with_insurance )  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
state_poverty <- state_poverty %>% mutate(
pct_below_poverty = below_pov/total)
state_poverty_long<- state_poverty %>% select(-pop_group , -below_pov)  %>%
gather(estimate_type, estimate, -Geography ,-pop_id) %>% filter(estimate_type !="total")
#state_edu<- state_edu %>% rename( `HS or Higher` = tot_hs_higher,
#                                       `BA or Higher` = tot_bahigher)
## Pulling National BA or Higher Percentage
avg_hs_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_hs_higher) %>%  summarize(mean = mean(pct_hs_higher)) %>% pull() %>% round(.,4)
avg_hs_higher <- avg_hs_higher*100
## Pulling National BA or Higher Percentage
avg_ba_higher <- state_edu %>% filter(pop_id == 1) %>% select(Geography, pct_ba_higher) %>%  summarize(mean = mean(pct_ba_higher)) %>% pull() %>% round(.,4)
avg_ba_higher <- avg_ba_higher*100
## Pulling National Percent No Insurance
avg_pct_noins <- state_insurance %>% filter(pop_id == 1) %>% select(Geography, pct_no_ins) %>%  summarize(mean = mean(pct_no_ins)) %>% pull() %>% round(.,4)
avg_pct_noins <- avg_pct_noins*100
## Pulling Poverty
avg_pct_belowpov <- state_poverty %>% filter(pop_id == 1) %>% select(Geography, pct_below_poverty) %>%  summarize(mean = mean(pct_below_poverty)) %>% pull() %>% round(.,4)
avg_pct_belowpov <- avg_pct_belowpov*100
racial_groups<- c(1,2,4,6,12,32,50,60)
aapi_alone<- c(1,12,50)
aapi_combo<- c(1,31,60)
Asian_orign_alone <- c(13:29)
Asian_origin_combo<- c(32,34,35,36,38,41,42,43,45,47,48)
NHPI_origin_alone <- c(51,55,56)
NHPI_origin_combo<- c(61:66)
state_edu_alone <- state_edu_long  %>% filter(pop_id %in% aapi_alone )
state_edu_alone$pop_id <- fct_recode(state_edu_alone$pop_id,
"State Population" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_edu_alone$estimate_type <- fct_recode(state_edu_alone$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
state_edu_combo <- state_edu_long  %>% filter(pop_id %in% aapi_combo )
state_edu_combo$pop_id <- fct_recode(state_edu_combo$pop_id,
"State Population" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_edu_combo$estimate_type <- fct_recode(state_edu_combo$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
### Insurance
state_ins_alone <- state_insurance_long  %>% filter(pop_id %in% aapi_alone )
state_ins_alone$pop_id <- fct_recode(state_ins_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_ins_alone$estimate_type <- fct_recode(state_ins_alone$estimate_type,
"No Health Ins." = "pct_no_ins")
### Insurance
state_ins_combo <- state_insurance_long  %>% filter(pop_id %in% aapi_combo )
state_ins_combo$pop_id <- fct_recode(state_ins_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_ins_combo$estimate_type <- fct_recode(state_ins_combo$estimate_type,
"No Health Ins." = "pct_no_ins")
# POVERTY
state_poverty_alone <- state_poverty_long  %>% filter(pop_id %in% aapi_alone )
state_poverty_alone$pop_id <- fct_recode(state_poverty_alone$pop_id,
"State" = "1",
"Asian" = "12",
"NHPI" = "50")
## Recoding state_edu_alone$estimate_type
state_poverty_alone$estimate_type <- fct_recode(state_poverty_alone$estimate_type,
"Below Poverty" = "pct_below_poverty")
### POVERTY
state_poverty_combo <- state_poverty_long  %>% filter(pop_id %in% aapi_combo )
state_poverty_combo$pop_id <- fct_recode(state_poverty_combo$pop_id,
"State" = "1",
"Asian" = "31",
"NHPI" = "60")
## Recoding state_edu_alone$estimate_type
state_poverty_combo$estimate_type <- fct_recode(state_poverty_combo$estimate_type,
"Below Poverty" = "pct_below_poverty")
state_edu_combo_origin <- state_edu_long  %>% filter(pop_id %in% Asian_origin_combo )
state_edu_combo_origin$pop_id <- fct_recode(state_edu_combo_origin$pop_id,
"Asian Indian" = "32",
"Cambodian" = "34",
"Chinese" = "35",
"Chinese (except, Taiwanese)" = "36",
"Filipino" = "38",
"Japanese" = "41",
"Korean" = "42",
"Laotian" = "43",
"Pakistani" = "45",
"Thai" = "47",
"Vietnamese" = "48")
## Recoding state_edu_alone$estimate_type
state_edu_combo_origin$estimate_type <- fct_recode(state_edu_combo_origin$estimate_type,
"HS or Higher" = "pct_hs_higher",
"BA or Higher" = "pct_ba_higher",
"Total" ="total")
View(state_edu_combo_origin)
state_edu_table_combo_origin <-state_edu_combo_origin %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
View(state_edu_table_combo_origin)
ix <- 2:23
state_edu_table_combo[ix] <- lapply(state_edu_table_combo[ix], as.numeric)
state_edu_table_combo_origin <-state_edu_combo_origin %>%
mutate(long_key=paste(pop_id, estimate_type, sep=": ")) %>% #Combining Pop_ID and Estimate type
select(-pop_id, -estimate_type) %>%
spread(long_key, estimate,fill = " - ") %>%
rename(State= Geography)
ix <- 2:23
state_edu_table_combo_origin[ix] <- lapply(state_edu_table_combo_origin[ix], as.numeric)
state_edu_table_combo %>%
datatable(extensions =
>>>>>>> Stashed changes
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'rtpB',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
<<<<<<< Updated upstream
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatCurrency(columns = c(2,3),currency = "", interval = 3, mark = ",", digits=0)
national_tbl_display <- function(data,group){
data %>%
filter(group_ID ==  paste(group)) %>%
arrange(desc(CVAP)) %>%
rename(Total = total_pop)%>%
select(Group, CVAP,Total )%>%
=======
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
state_edu_table_combo_origin %>%
>>>>>>> Stashed changes
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
<<<<<<< Updated upstream
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatCurrency(columns = c(2,3),currency = "", interval = 3, mark = ",", digits=0)
}
national_tbl_display(national_cvap,"Major Racial Groups")
national_tbl_display(national_cvap,"Asian Detail")
=======
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2,3,4,5,6,7),2)
state_edu_table_combo_origin %>%
datatable(extensions =
list("Buttons" = NULL, 'FixedColumns'= T, "Scroller"=T),
rownames= FALSE,
options = list(
dom = 'Brt',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 1),
lengthMenu = c(25, 50, 100), pageLength = 50)) %>% formatPercentage(columns=c(2:23),0)
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
>>>>>>> Stashed changes
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/quick_stats/")
#render your sweet site.
rmarkdown::render_site()
